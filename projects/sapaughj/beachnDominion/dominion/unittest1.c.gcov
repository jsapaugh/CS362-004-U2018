        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2:* Author : Jacob Sapaugh
        -:    3:*          Oregon State University
        -:    4:*          CS 362
        -:    5:*          07-18-2018
        -:    6:*/
        -:    7:
        -:    8:#include "dominion.h"
        -:    9:#include "dominion_helpers.h"
        -:   10:#include "rngs.h"
        -:   11:#include <stdio.h>
        -:   12:#include <stdlib.h>
        -:   13:
        -:   14:/*
        -:   15:* Testing int whoseTurn(struct gameState *state)
        -:   16:*/
        -:   17:
        -:   18:void assertEquals(int expected, int actual, char message []);
        -:   19:void testWhoseTurn();
        -:   20:
function main called 1 returned 100% blocks executed 100%
        1:   21:int main(int argc, char *argv[])
        -:   22:{
        1:   23:    char functionUnderTest[] = "int whoseTurn(struct gameState *state)";
        1:   24:    printf("__________________________________________________________________\n");
call    0 returned 100%
        1:   25:    fflush(stdout);        
call    0 returned 100%
        1:   26:    printf("*******Begin testing of %s*******\n",functionUnderTest);
call    0 returned 100%
        1:   27:    fflush(stdout);        
call    0 returned 100%
        -:   28:    
        1:   29:    testWhoseTurn();
call    0 returned 100%
        -:   30:    
        1:   31:    fflush(stdout);        
call    0 returned 100%
        1:   32:    printf("*******End testing of %s*******\n",functionUnderTest);
call    0 returned 100%
        1:   33:    fflush(stdout);        
call    0 returned 100%
        1:   34:    printf("__________________________________________________________________\n");
call    0 returned 100%
        1:   35:    fflush(stdout);        
call    0 returned 100%
        -:   36:}
        -:   37:
function testWhoseTurn called 1 returned 100% blocks executed 100%
        1:   38:void testWhoseTurn()
        -:   39:{
        -:   40:    struct gameState state;
        1:   41:    int players = 2;
        1:   42:    int seed = 50;
        1:   43:    int k[10] = {adventurer, smithy, gardens, embargo, village, steward, mine, cutpurse, outpost, tribute};
        -:   44:    
        1:   45:    initializeGame(players, k, seed, &state);
call    0 returned 100%
        -:   46:    
        1:   47:    state.whoseTurn = 0;
        -:   48:    
        1:   49:    assertEquals(0, whoseTurn(&state), "Testing state for whose turn it is");
call    0 returned 100%
call    1 returned 100%
        -:   50:    
        1:   51:    state.whoseTurn = 1;
        -:   52:    
        1:   53:    assertEquals(1, whoseTurn(&state), "Testing state for whose turn it is");
call    0 returned 100%
call    1 returned 100%
        1:   54:}
        -:   55:
function assertEquals called 2 returned 100% blocks executed 75%
        2:   56:void assertEquals(int expected, int actual, char message[])
        -:   57:{
        2:   58:    printf("%s\n", message);
call    0 returned 100%
        2:   59:    fflush(stdout);
call    0 returned 100%
        -:   60:    
        2:   61:    if(expected == actual)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:   62:    {
        2:   63:        printf("****************TEST SUCCESSFULLY COMPLETED****************\n");
call    0 returned 100%
        2:   64:        fflush(stdout);
call    0 returned 100%
        -:   65:    }
        -:   66:    else
        -:   67:    {
    #####:   68:        printf("************************TEST FAILED************************\n");
call    0 never executed
    #####:   69:        fflush(stdout);        
call    0 never executed
        -:   70:    }
        2:   71:}
